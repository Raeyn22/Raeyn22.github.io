-- Users table (extends auth.users)
create table public.profiles (
  id uuid references auth.users not null primary key,
  full_name text,
  user_type text check (user_type in ('farmer', 'buyer', 'market')),
  phone text,
  location text,
  created_at timestamp with time zone default now()
);

-- Products table
create table public.products (
  id bigint generated by default as identity primary key,
  farmer_id uuid references public.profiles not null,
  name text not null,
  description text,
  price numeric not null,
  unit text not null,
  category text,
  available_quantity numeric,
  image_url text,
  created_at timestamp with time zone default now()
);

-- Price alerts table
create table public.price_alerts (
  id bigint generated by default as identity primary key,
  user_id uuid references public.profiles not null,
  commodity text not null,
  target_price numeric not null,
  phone_number text not null,
  is_active boolean default true,
  created_at timestamp with time zone default now()
);

-- Market prices table
create table public.market_prices (
  id bigint generated by default as identity primary key,
  commodity text not null,
  price numeric not null,
  market_location text not null,
  trend text check (trend in ('up', 'down', 'stable')),
  reported_at timestamp with time zone default now()
);

-- Enable Row Level Security
alter table public.profiles enable row level security;
alter table public.products enable row level security;
alter table public.price_alerts enable row level security;
alter table public.market_prices enable row level security;

-- Create policies for RLS (simplified for demo)
create policy "Public profiles are viewable by everyone." on public.profiles for select using (true);
create policy "Users can update own profile." on public.profiles for update using (auth.uid() = id);

create policy "Products are viewable by everyone." on public.products for select using (true);
create policy "Farmers can manage their products" on public.products for all using (auth.uid() = farmer_id);

create policy "Users can manage their own price alerts" on public.price_alerts for all using (auth.uid() = user_id);
create policy "Market prices are viewable by everyone" on public.market_prices for select using (true);
